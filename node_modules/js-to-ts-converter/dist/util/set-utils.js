"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Unions two or more sets to create a combined set. Does not mutate the input
 * sets.
 */
function union(setA, ...sets) {
    const union = new Set(setA);
    sets.forEach(currentSet => {
        for (const elem of currentSet) {
            union.add(elem);
        }
    });
    return union;
}
exports.union = union;
/**
 * Removes the elements of `setB` from `setA` to produce the difference. Does
 * not mutate the input sets.
 */
function difference(setA, setB) {
    const difference = new Set(setA);
    for (const elem of setB) {
        difference.delete(elem);
    }
    return difference;
}
exports.difference = difference;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0LXV0aWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWwvc2V0LXV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUE7OztHQUdHO0FBQ0gsZUFBMEIsSUFBWSxFQUFFLEdBQUcsSUFBYztJQUN4RCxNQUFNLEtBQUssR0FBRyxJQUFJLEdBQUcsQ0FBSyxJQUFJLENBQUUsQ0FBQztJQUVqQyxJQUFJLENBQUMsT0FBTyxDQUFFLFVBQVUsQ0FBQyxFQUFFO1FBQzFCLEtBQUssTUFBTSxJQUFJLElBQUksVUFBVSxFQUFHO1lBQy9CLEtBQUssQ0FBQyxHQUFHLENBQUUsSUFBSSxDQUFFLENBQUM7U0FDbEI7SUFDRixDQUFDLENBQUUsQ0FBQztJQUNKLE9BQU8sS0FBSyxDQUFDO0FBQ2QsQ0FBQztBQVRELHNCQVNDO0FBR0Q7OztHQUdHO0FBQ0gsb0JBQStCLElBQVksRUFBRSxJQUFZO0lBQ3hELE1BQU0sVUFBVSxHQUFHLElBQUksR0FBRyxDQUFFLElBQUksQ0FBRSxDQUFDO0lBQ25DLEtBQUssTUFBTSxJQUFJLElBQUksSUFBSSxFQUFHO1FBQ3pCLFVBQVUsQ0FBQyxNQUFNLENBQUUsSUFBSSxDQUFFLENBQUM7S0FDMUI7SUFDRCxPQUFPLFVBQVUsQ0FBQztBQUNuQixDQUFDO0FBTkQsZ0NBTUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFVuaW9ucyB0d28gb3IgbW9yZSBzZXRzIHRvIGNyZWF0ZSBhIGNvbWJpbmVkIHNldC4gRG9lcyBub3QgbXV0YXRlIHRoZSBpbnB1dFxuICogc2V0cy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVuaW9uPFQ+KCBzZXRBOiBTZXQ8VD4sIC4uLnNldHM6IFNldDxUPltdICkge1xuXHRjb25zdCB1bmlvbiA9IG5ldyBTZXQ8VD4oIHNldEEgKTtcblxuXHRzZXRzLmZvckVhY2goIGN1cnJlbnRTZXQgPT4ge1xuXHRcdGZvciggY29uc3QgZWxlbSBvZiBjdXJyZW50U2V0ICkge1xuXHRcdFx0dW5pb24uYWRkKCBlbGVtICk7XG5cdFx0fVxuXHR9ICk7XG5cdHJldHVybiB1bmlvbjtcbn1cblxuXG4vKipcbiAqIFJlbW92ZXMgdGhlIGVsZW1lbnRzIG9mIGBzZXRCYCBmcm9tIGBzZXRBYCB0byBwcm9kdWNlIHRoZSBkaWZmZXJlbmNlLiBEb2VzXG4gKiBub3QgbXV0YXRlIHRoZSBpbnB1dCBzZXRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGlmZmVyZW5jZTxUPiggc2V0QTogU2V0PFQ+LCBzZXRCOiBTZXQ8VD4gKSB7XG5cdGNvbnN0IGRpZmZlcmVuY2UgPSBuZXcgU2V0KCBzZXRBICk7XG5cdGZvciggY29uc3QgZWxlbSBvZiBzZXRCICkge1xuXHRcdGRpZmZlcmVuY2UuZGVsZXRlKCBlbGVtICk7XG5cdH1cblx0cmV0dXJuIGRpZmZlcmVuY2U7XG59Il19